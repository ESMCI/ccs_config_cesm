if (COMP_NAME STREQUAL gptl)
  string(APPEND CPPDEFS " -DHAVE_NANOTIME -DBIT64 -DHAVE_SLASHPROC -DHAVE_GETTIMEOFDAY")
endif()

if (NOT DEBUG)
  if (GPU_TYPE STREQUAL none OR GPU_TYPE STREQUAL "mi300a") # Large-memory HTC nodes (AMD EPYC 9554P CPU) or MI300A GPU
    string(APPEND CFLAGS " -march=znver4 -mtune=znver4")
    string(APPEND CXXFLAGS " -march=znver4 -mtune=znver4")
    string(APPEND FFLAGS " -march=znver4 -mtune=znver4 -fstack-arrays")
    string(APPEND LDFLAGS " -march=znver4 -mtune=znver4")
  elseif(GPU_TYPE STREQUAL a100) # AMD EPYC Milan 7763 CPU 
    string(APPEND CFLAGS " -march=znver3 -mtune=znver3")
    string(APPEND CXXFLAGS " -march=znver3 -mtune=znver3")
    string(APPEND FFLAGS " -march=znver3 -mtune=znver3 -fstack-arrays")
    string(APPEND LDFLAGS " -march=znver3 -mtune=znver3")
  elseif(GPU_TYPE STREQUAL h100) # Intel Xeon Gold 6430 CPU
    string(APPEND CFLAGS " -march=sapphirerapids -mtune=sapphirerapids")
    string(APPEND CXXFLAGS " -march=sapphirerapids -mtune=sapphirerapids")
    string(APPEND FFLAGS " -march=sapphirerapids -mtune=sapphirerapids -fstack-arrays")
    string(APPEND LDFLAGS " -march=sapphirerapids -mtune=sapphirerapids")
  else() # V100 GPU nodes or small-memory HTC nodes
    string(APPEND CFLAGS " -march=cascadelake -mtune=cascadelake")
    string(APPEND CXXFLAGS " -march=cascadelake -mtune=cascadelake")
    string(APPEND FFLAGS " -march=cascadelake -mtune=cascadelake -fstack-arrays")
    string(APPEND LDFLAGS " -march=cascadelake -mtune=cascadelake")
  endif()
endif()

if (GPU_TYPE STREQUAL "mi300a")
  string(APPEND SLIBS " -lopenblas") # -llapack -lblas
endif()
if (MPILIB STREQUAL mpi-serial)
  string(APPEND SLIBS " -ldl")
endif()
string(APPEND SLIBS " -L${NETCDF_PATH}/lib -lnetcdf -lnetcdff")
message("GPU_TYPE is ${GPU_TYPE}")
message("OPENACC_GPU_OFFLOAD is ${OPENACC_GPU_OFFLOAD}")
message("OPENMP_GPU_OFFLOAD is ${OPENMP_GPU_OFFLOAD}")

if (USE_KOKKOS)
  # Generic setting that are used regardless of Architecture or Kokkos backend
  string(APPEND KOKKOS_OPTIONS " -DKokkos_ENABLE_DEPRECATED_CODE=OFF -DKokkos_ENABLE_EXPLICIT_INSTANTIATION=OFF")
  if (KOKKOS_GPU_OFFLOAD)
    string(APPEND CPPDEFS " -DGPU -DTHRUST_IGNORE_CUB_VERSION_CHECK -DHOMMEXX_ENABLE_GPU")
    string(APPEND KOKKOS_OPTIONS " -DKokkos_ENABLE_SERIAL=ON -DKokkos_ENABLE_OPENMP=OFF -DKokkos_ENABLE_AGGRESSIVE_VECTORIZATION=OFF")
    if (GPU_TYPE STREQUAL v100)
      string(APPEND KOKKOS_OPTIONS " -DKokkos_ARCH_VOLTA70=ON -DKokkos_ENABLE_CUDA=ON -DKokkos_ENABLE_CUDA_LAMBDA=ON -DKokkos_ENABLE_IMPL_CUDA_MALLOC_ASYNC=OFF")
      string(APPEND CXXFLAGS " -extended-lambda -Wext-lambda-captures-this -std=c++17 -arch=sm_70")
    elseif(GPU_TYPE STREQUAL a100)
      string(APPEND KOKKOS_OPTIONS " -DKokkos_ARCH_AMPERE80=ON -DKokkos_ENABLE_CUDA=ON -DKokkos_ENABLE_CUDA_LAMBDA=ON -DKokkos_ENABLE_IMPL_CUDA_MALLOC_ASYNC=OFF")
      string(APPEND CXXFLAGS " -extended-lambda -Wext-lambda-captures-this -std=c++17 -arch=sm_80")
    elseif(GPU_TYPE STREQUAL h100)
      string(APPEND KOKKOS_OPTIONS " -DKokkos_ARCH_HOPPER90=ON -DKokkos_ENABLE_CUDA=ON -DKokkos_ENABLE_CUDA_LAMBDA=ON -DKokkos_ENABLE_IMPL_CUDA_MALLOC_ASYNC=OFF")
      string(APPEND CXXFLAGS " -extended-lambda -Wext-lambda-captures-this -std=c++17 -arch=sm_90")
    elseif(GPU_TYPE STREQUAL mi300a)
      string(APPEND KOKKOS_OPTIONS " -DKokkos_ENABLE_HIP=ON -DKokkos_ARCH_ZEN4=ON -DAMDGPU_TARGETS=GFX942 -DKokkos_ARCH_AMD_GFX942=ON") # Currently theta-l_kokkos dycore does not handle APU correctly (i.e., -DKokkos_ARCH_AMD_GFX942_APU=ON)
      string(APPEND CXXFLAGS " -D__HIP_PLATFORM_AMD__ -std=c++17 -Wno-mismatched-tags --offload-arch=gfx942 -munsafe-fp-atomics -fno-gpu-rdc -x hip -I$ENV{NCAR_INC_OPENMPI}")
      set(SCXX "hipcc")
      set(MPICXX ${SCXX})
    else()
      message(FATAL_ERROR "GPU_TYPE ${GPU_TYPE} not supported")
    endif()  
  else()
    # Enable EPYC arch in kokkos
    if (compile_threaded)
      # Settings used when OpenMP is the Kokkos backend
      string(APPEND KOKKOS_OPTIONS " -DKokkos_ARCH_ZEN4=ON -DKokkos_ENABLE_AGGRESSIVE_VECTORIZATION=ON -DKokkos_ENABLE_SERIAL=OFF -DKokkos_ENABLE_OPENMP=ON")
    else()
      string(APPEND KOKKOS_OPTIONS " -DKokkos_ARCH_ZEN4=ON -DKokkos_ENABLE_SERIAL=ON -DKokkos_ENABLE_OPENMP=OFF")
    endif()
    string(APPEND CXXFLAGS " -march=znver4 -mtune=znver4")
  endif()
  if (CMAKE_Fortran_COMPILER_VERSION VERSION_GREATER_EQUAL 10)
    set(CMAKE_Fortran_FLAGS "-fallow-argument-mismatch"  CACHE STRING "" FORCE) # only works with gnu v10 and above
  endif()
  string(APPEND LDFLAGS " -lstdc++ -lkokkoscontainers -lkokkoscore -lkokkossimd ")
  if (GPU_TYPE STREQUAL "mi300a")
    string(APPEND LDFLAGS " -lhiprtc -lamdhip64 ")
  endif()  
endif()
