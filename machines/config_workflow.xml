<?xml version="1.0"?>
<config_workflow version="2.1">
  <!--
  File: config_workflow.xml
  Purpose: Define the jobs to be run, the order to run them, the job size and
  any dependancies they may have.

  job name: The name of the script as it appears in the case.
  template: The template from which the job script will be derived.
            If a template does not include a full path it is assumed to be
	    in the config/$CIME_MODEL/machines directory.
	    In the template {{ }} denotes a keyword that will be expanded to create the job script.
            This is done in the case.setup stage.
	    recognized keywords are:
	      total_tasks, num_nodes, max_tasks_per_node, job_id, batchdirectives, mpirun
	      most xml variables in the case and any case attribute.
            If the template is not found the corresponding step will not be included in the
	    workflow.

  prereq: A logical value derived from case xml variables used to determine if this step should
          be included in the workflow
  dependency: one or more job names in the workflow that must complete successfully before this step
              is started.
  runtime_parameters:
          case.run or case.test determine their pelayout from the config_pes.xml file but other jobs
          in the workflow may have other requirements variables in this block determine those requirements.
	  The runtime_parameters block may have an optional MACH attribute.

  -->
  <workflow_jobs id="default">
    <!-- order matters, with no-batch jobs will be run in the order listed here -->
    <job name="case.run">
      <template>template.case.run</template>
      <prereq>$BUILD_COMPLETE and not $TEST</prereq>
    </job>
    <job name="case.test">
      <template>template.case.test</template>
      <prereq>$BUILD_COMPLETE and $TEST</prereq>
    </job>
    <job name="case.st_archive">
      <template>template.st_archive</template>
      <!-- If DOUT_S is true and case.run (or case.test) exits successfully then run st_archive-->
      <dependency>case.run or case.test</dependency>
      <prereq>$DOUT_S</prereq>
      <runtime_parameters>
        <task_count>1</task_count>
        <tasks_per_node>1</tasks_per_node>
        <walltime>0:20:00</walltime>
      </runtime_parameters>
    </job>
    <job name="case.cupid">
      <template>template.cupid</template>
      <hidden>false</hidden>
      <dependency>case.st_archive</dependency>
      <prereq>$RUN_POSTPROCESSING</prereq>
      <runtime_parameters MACH="derecho">
        <task_count>$CUPID_NTASKS</task_count>
        <tasks_per_node>$CUPID_TASKS_PER_NODE</tasks_per_node>
        <mem_per_task>$CUPID_MEM_PER_TASK</mem_per_task>
        <walltime>0:40:00</walltime>
      </runtime_parameters>
    </job>
  </workflow_jobs>

  <workflow_jobs id="cmip7" prepend="default">
    <job name="amon">
      <template>template.amon</template>
      <dependency>case.st_archive</dependency>
      <prereq>True</prereq>
      <runtime_parameters MACH="derecho">
        <task_count>128</task_count>
        <tasks_per_node>128</tasks_per_node>
        <mem_per_task>10</mem_per_task>
        <walltime>0:40:00</walltime>
      </runtime_parameters>
    </job>
  </workflow_jobs>
      

  
  <!-- THIS CREATES THE JOB FOR THE LAUNCHING OF THE SMARTSIM ORCHESTRATOR -->
  <workflow_jobs id="smartsim_db" prepend="default">
    <job name="smartsim_db"> <!-- name here corresponds with scripts -->
      <!-- The following should point to the launching script for the orchestrator -->
      <template>/glade/work/ashao/dev/SmartSim/tutorials/cheyenne/cime_database.sh</template>
      <prereq>1</prereq>
      <runtime_parameters MACH="cheyenne">
        <task_count>3</task_count> <!-- This will be the number of nodes to run the orchestrator on  -->
	      <tasks_per_node>1</tasks_per_node>
	      <walltime>0:20:00</walltime>
      </runtime_parameters>
    </job>
  </workflow_jobs>

</config_workflow>
